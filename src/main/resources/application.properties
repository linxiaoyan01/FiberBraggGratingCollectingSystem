server.port=8085
spring.mvc.static-path-pattern=/static/**
spring.web.resources.static-locations=classpath:/static,classpath:/templates
spring.datasource.url=jdbc:mysql://43.138.101.236:3306/pipeline_monitor?serverTimezone=Asia/Shanghai&useSSL=false&useUnicode=true&characterEncoding=utf8&allowMultiQueries=true
spring.datasource.username=root
spring.datasource.password=yourpassword
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#使用阿里巴巴druid数据源，默认使用自带的
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource

#redis 配置
spring.redis.host=43.138.101.236
spring.redis.password=123456
spring.redis.port=8000

#开启控制台打印sql
#mybatis.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl

# mybatis 下划线转驼峰配置,两者都可以
#mybatis.configuration.mapUnderscoreToCamelCase=true
mybatis.configuration.map-underscore-to-camel-case=true
#mapper xml 文件地址
mybatis.mapper-locations=classpath*:mapper/**/*.xml
#打印所有的sql日志：sql 参数 结果
#logging.level.top.kaluna.pipelineMonitor.mapper = trace

# 连接池最大连接数（使用负值表示没有限制）
spring.redis.lettuce.pool.max-active = 10

# 连接池中的最大空闲连接
spring.redis.lettuce.pool.max-idle = 10

# 连接池中的最小空闲连接
spring.redis.lettuce.pool.min-idle = 0

# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.lettuce.pool.max-wait= -1ms

#指定客户端
spring.redis.client-type = lettuce


#rocketmq配置
spring.rocketmq.name-server=127.0.0.1:9876
spring.rocketmq.producer.group=default

spring.mvc.pathmatch.matching-strategy=ant_path_matcher

#阿里云OSS配置
aliyun.oss.endpoint = oss-cn-beijing.aliyuncs.com
aliyun.oss.access-key-id = LTAI5tJqXECYh7knnQfKDRyo
aliyun.oss.access-key-secret = qrUj5DhrUG7bgwdh3NcXvyeja0CiCn
aliyun.oss.bucketname = pipline-monitor
#解决fastjson漏洞
fastjson.parser.safeMode=true
#文件从阿里云oss拉取到本地的本地存储路径
save.file.path = /root/ossDownloadFile/
#不同阵列的文件名
save.file.name1 = SensorArray1.txt
save.file.name2 = SensorArray2.txt

