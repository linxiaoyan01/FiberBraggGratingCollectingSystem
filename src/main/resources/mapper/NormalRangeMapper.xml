<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.kaluna.modbusTcp.mapper.NormalRangeMapper">
  <resultMap id="BaseResultMap" type="top.kaluna.modbusTcp.domain.NormalRange">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="val1_min_value" jdbcType="DECIMAL" property="val1MinValue" />
    <result column="val2_min_value" jdbcType="DECIMAL" property="val2MinValue" />
    <result column="val3_min_value" jdbcType="DECIMAL" property="val3MinValue" />
    <result column="val4_min_value" jdbcType="DECIMAL" property="val4MinValue" />
    <result column="val5_min_value" jdbcType="DECIMAL" property="val5MinValue" />
    <result column="val6_min_value" jdbcType="DECIMAL" property="val6MinValue" />
    <result column="val1_max_value" jdbcType="DECIMAL" property="val1MaxValue" />
    <result column="val2_max_value" jdbcType="DECIMAL" property="val2MaxValue" />
    <result column="val3_max_value" jdbcType="DECIMAL" property="val3MaxValue" />
    <result column="val4_max_value" jdbcType="DECIMAL" property="val4MaxValue" />
    <result column="val5_max_value" jdbcType="DECIMAL" property="val5MaxValue" />
    <result column="val6_max_value" jdbcType="DECIMAL" property="val6MaxValue" />
    <result column="create_time" jdbcType="BIGINT" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, val1_min_value, val2_min_value, val3_min_value, val4_min_value, val5_min_value, 
    val6_min_value, val1_max_value, val2_max_value, val3_max_value, val4_max_value, val5_max_value, 
    val6_max_value, create_time
  </sql>
  <select id="selectByExample" parameterType="top.kaluna.modbusTcp.domain.NormalRangeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from normal_range
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from normal_range
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from normal_range
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="top.kaluna.modbusTcp.domain.NormalRangeExample">
    delete from normal_range
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="top.kaluna.modbusTcp.domain.NormalRange">
    insert into normal_range (id, val1_min_value, val2_min_value, 
      val3_min_value, val4_min_value, val5_min_value, 
      val6_min_value, val1_max_value, val2_max_value, 
      val3_max_value, val4_max_value, val5_max_value, 
      val6_max_value, create_time)
    values (#{id,jdbcType=BIGINT}, #{val1MinValue,jdbcType=DECIMAL}, #{val2MinValue,jdbcType=DECIMAL}, 
      #{val3MinValue,jdbcType=DECIMAL}, #{val4MinValue,jdbcType=DECIMAL}, #{val5MinValue,jdbcType=DECIMAL}, 
      #{val6MinValue,jdbcType=DECIMAL}, #{val1MaxValue,jdbcType=DECIMAL}, #{val2MaxValue,jdbcType=DECIMAL}, 
      #{val3MaxValue,jdbcType=DECIMAL}, #{val4MaxValue,jdbcType=DECIMAL}, #{val5MaxValue,jdbcType=DECIMAL}, 
      #{val6MaxValue,jdbcType=DECIMAL}, #{createTime,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="top.kaluna.modbusTcp.domain.NormalRange">
    insert into normal_range
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="val1MinValue != null">
        val1_min_value,
      </if>
      <if test="val2MinValue != null">
        val2_min_value,
      </if>
      <if test="val3MinValue != null">
        val3_min_value,
      </if>
      <if test="val4MinValue != null">
        val4_min_value,
      </if>
      <if test="val5MinValue != null">
        val5_min_value,
      </if>
      <if test="val6MinValue != null">
        val6_min_value,
      </if>
      <if test="val1MaxValue != null">
        val1_max_value,
      </if>
      <if test="val2MaxValue != null">
        val2_max_value,
      </if>
      <if test="val3MaxValue != null">
        val3_max_value,
      </if>
      <if test="val4MaxValue != null">
        val4_max_value,
      </if>
      <if test="val5MaxValue != null">
        val5_max_value,
      </if>
      <if test="val6MaxValue != null">
        val6_max_value,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="val1MinValue != null">
        #{val1MinValue,jdbcType=DECIMAL},
      </if>
      <if test="val2MinValue != null">
        #{val2MinValue,jdbcType=DECIMAL},
      </if>
      <if test="val3MinValue != null">
        #{val3MinValue,jdbcType=DECIMAL},
      </if>
      <if test="val4MinValue != null">
        #{val4MinValue,jdbcType=DECIMAL},
      </if>
      <if test="val5MinValue != null">
        #{val5MinValue,jdbcType=DECIMAL},
      </if>
      <if test="val6MinValue != null">
        #{val6MinValue,jdbcType=DECIMAL},
      </if>
      <if test="val1MaxValue != null">
        #{val1MaxValue,jdbcType=DECIMAL},
      </if>
      <if test="val2MaxValue != null">
        #{val2MaxValue,jdbcType=DECIMAL},
      </if>
      <if test="val3MaxValue != null">
        #{val3MaxValue,jdbcType=DECIMAL},
      </if>
      <if test="val4MaxValue != null">
        #{val4MaxValue,jdbcType=DECIMAL},
      </if>
      <if test="val5MaxValue != null">
        #{val5MaxValue,jdbcType=DECIMAL},
      </if>
      <if test="val6MaxValue != null">
        #{val6MaxValue,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="top.kaluna.modbusTcp.domain.NormalRangeExample" resultType="java.lang.Long">
    select count(*) from normal_range
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update normal_range
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.val1MinValue != null">
        val1_min_value = #{record.val1MinValue,jdbcType=DECIMAL},
      </if>
      <if test="record.val2MinValue != null">
        val2_min_value = #{record.val2MinValue,jdbcType=DECIMAL},
      </if>
      <if test="record.val3MinValue != null">
        val3_min_value = #{record.val3MinValue,jdbcType=DECIMAL},
      </if>
      <if test="record.val4MinValue != null">
        val4_min_value = #{record.val4MinValue,jdbcType=DECIMAL},
      </if>
      <if test="record.val5MinValue != null">
        val5_min_value = #{record.val5MinValue,jdbcType=DECIMAL},
      </if>
      <if test="record.val6MinValue != null">
        val6_min_value = #{record.val6MinValue,jdbcType=DECIMAL},
      </if>
      <if test="record.val1MaxValue != null">
        val1_max_value = #{record.val1MaxValue,jdbcType=DECIMAL},
      </if>
      <if test="record.val2MaxValue != null">
        val2_max_value = #{record.val2MaxValue,jdbcType=DECIMAL},
      </if>
      <if test="record.val3MaxValue != null">
        val3_max_value = #{record.val3MaxValue,jdbcType=DECIMAL},
      </if>
      <if test="record.val4MaxValue != null">
        val4_max_value = #{record.val4MaxValue,jdbcType=DECIMAL},
      </if>
      <if test="record.val5MaxValue != null">
        val5_max_value = #{record.val5MaxValue,jdbcType=DECIMAL},
      </if>
      <if test="record.val6MaxValue != null">
        val6_max_value = #{record.val6MaxValue,jdbcType=DECIMAL},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update normal_range
    set id = #{record.id,jdbcType=BIGINT},
      val1_min_value = #{record.val1MinValue,jdbcType=DECIMAL},
      val2_min_value = #{record.val2MinValue,jdbcType=DECIMAL},
      val3_min_value = #{record.val3MinValue,jdbcType=DECIMAL},
      val4_min_value = #{record.val4MinValue,jdbcType=DECIMAL},
      val5_min_value = #{record.val5MinValue,jdbcType=DECIMAL},
      val6_min_value = #{record.val6MinValue,jdbcType=DECIMAL},
      val1_max_value = #{record.val1MaxValue,jdbcType=DECIMAL},
      val2_max_value = #{record.val2MaxValue,jdbcType=DECIMAL},
      val3_max_value = #{record.val3MaxValue,jdbcType=DECIMAL},
      val4_max_value = #{record.val4MaxValue,jdbcType=DECIMAL},
      val5_max_value = #{record.val5MaxValue,jdbcType=DECIMAL},
      val6_max_value = #{record.val6MaxValue,jdbcType=DECIMAL},
      create_time = #{record.createTime,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="top.kaluna.modbusTcp.domain.NormalRange">
    update normal_range
    <set>
      <if test="val1MinValue != null">
        val1_min_value = #{val1MinValue,jdbcType=DECIMAL},
      </if>
      <if test="val2MinValue != null">
        val2_min_value = #{val2MinValue,jdbcType=DECIMAL},
      </if>
      <if test="val3MinValue != null">
        val3_min_value = #{val3MinValue,jdbcType=DECIMAL},
      </if>
      <if test="val4MinValue != null">
        val4_min_value = #{val4MinValue,jdbcType=DECIMAL},
      </if>
      <if test="val5MinValue != null">
        val5_min_value = #{val5MinValue,jdbcType=DECIMAL},
      </if>
      <if test="val6MinValue != null">
        val6_min_value = #{val6MinValue,jdbcType=DECIMAL},
      </if>
      <if test="val1MaxValue != null">
        val1_max_value = #{val1MaxValue,jdbcType=DECIMAL},
      </if>
      <if test="val2MaxValue != null">
        val2_max_value = #{val2MaxValue,jdbcType=DECIMAL},
      </if>
      <if test="val3MaxValue != null">
        val3_max_value = #{val3MaxValue,jdbcType=DECIMAL},
      </if>
      <if test="val4MaxValue != null">
        val4_max_value = #{val4MaxValue,jdbcType=DECIMAL},
      </if>
      <if test="val5MaxValue != null">
        val5_max_value = #{val5MaxValue,jdbcType=DECIMAL},
      </if>
      <if test="val6MaxValue != null">
        val6_max_value = #{val6MaxValue,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="top.kaluna.modbusTcp.domain.NormalRange">
    update normal_range
    set val1_min_value = #{val1MinValue,jdbcType=DECIMAL},
      val2_min_value = #{val2MinValue,jdbcType=DECIMAL},
      val3_min_value = #{val3MinValue,jdbcType=DECIMAL},
      val4_min_value = #{val4MinValue,jdbcType=DECIMAL},
      val5_min_value = #{val5MinValue,jdbcType=DECIMAL},
      val6_min_value = #{val6MinValue,jdbcType=DECIMAL},
      val1_max_value = #{val1MaxValue,jdbcType=DECIMAL},
      val2_max_value = #{val2MaxValue,jdbcType=DECIMAL},
      val3_max_value = #{val3MaxValue,jdbcType=DECIMAL},
      val4_max_value = #{val4MaxValue,jdbcType=DECIMAL},
      val5_max_value = #{val5MaxValue,jdbcType=DECIMAL},
      val6_max_value = #{val6MaxValue,jdbcType=DECIMAL},
      create_time = #{createTime,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="findMaxId" resultType="top.kaluna.modbusTcp.resp.NormalRangeQueryResp">
    select * from normal_range where id=(select max(id) from normal_range);
  </select>
</mapper>