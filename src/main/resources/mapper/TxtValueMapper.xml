<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.kaluna.modbusTcp.mapper.TxtValueMapper">
  <resultMap id="BaseResultMap" type="top.kaluna.modbusTcp.domain.TxtValue">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="property_name" jdbcType="VARCHAR" property="propertyName" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="channel" jdbcType="INTEGER" property="channel" />
    <result column="array_num" jdbcType="INTEGER" property="arrayNum" />
    <result column="value" jdbcType="DECIMAL" property="value" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, property_name, create_time, channel, array_num, `value`
  </sql>
  <select id="selectByExample" parameterType="top.kaluna.modbusTcp.domain.TxtValueExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from txt_value
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from txt_value
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from txt_value
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="top.kaluna.modbusTcp.domain.TxtValueExample">
    delete from txt_value
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="top.kaluna.modbusTcp.domain.TxtValue">
    insert into txt_value (id, property_name, create_time, 
      channel, array_num, `value`
      )
    values (#{id,jdbcType=INTEGER}, #{propertyName,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{channel,jdbcType=INTEGER}, #{arrayNum,jdbcType=INTEGER}, #{value,jdbcType=DECIMAL}
      )
  </insert>
  <insert id="insertSelective" parameterType="top.kaluna.modbusTcp.domain.TxtValue">
    insert into txt_value
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="propertyName != null">
        property_name,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="channel != null">
        channel,
      </if>
      <if test="arrayNum != null">
        array_num,
      </if>
      <if test="value != null">
        `value`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="propertyName != null">
        #{propertyName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="channel != null">
        #{channel,jdbcType=INTEGER},
      </if>
      <if test="arrayNum != null">
        #{arrayNum,jdbcType=INTEGER},
      </if>
      <if test="value != null">
        #{value,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="top.kaluna.modbusTcp.domain.TxtValueExample" resultType="java.lang.Long">
    select count(*) from txt_value
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update txt_value
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.propertyName != null">
        property_name = #{record.propertyName,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.channel != null">
        channel = #{record.channel,jdbcType=INTEGER},
      </if>
      <if test="record.arrayNum != null">
        array_num = #{record.arrayNum,jdbcType=INTEGER},
      </if>
      <if test="record.value != null">
        `value` = #{record.value,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update txt_value
    set id = #{record.id,jdbcType=INTEGER},
      property_name = #{record.propertyName,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      channel = #{record.channel,jdbcType=INTEGER},
      array_num = #{record.arrayNum,jdbcType=INTEGER},
      `value` = #{record.value,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="top.kaluna.modbusTcp.domain.TxtValue">
    update txt_value
    <set>
      <if test="propertyName != null">
        property_name = #{propertyName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="channel != null">
        channel = #{channel,jdbcType=INTEGER},
      </if>
      <if test="arrayNum != null">
        array_num = #{arrayNum,jdbcType=INTEGER},
      </if>
      <if test="value != null">
        `value` = #{value,jdbcType=DECIMAL},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="top.kaluna.modbusTcp.domain.TxtValue">
    update txt_value
    set property_name = #{propertyName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      channel = #{channel,jdbcType=INTEGER},
      array_num = #{arrayNum,jdbcType=INTEGER},
      `value` = #{value,jdbcType=DECIMAL}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <insert id="multipleInsert">
    insert into txt_value
    (property_name, create_time, channel, array_num, value)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.propertyName},#{item.createTime},#{item.channel}, #{item.arrayNum},#{item.value})
    </foreach>
  </insert>
  <select id="minAndMaxFrom24Hours" resultType="top.kaluna.modbusTcp.domain.MinMaxValueForTemperature">
    select  min,  max , create_time from min_max_value_for_temperature where create_time  =  #{createTime}
  </select>
</mapper>